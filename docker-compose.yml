
services:
  carrentalsystem.api:
    build:
      context: .
      dockerfile: CarRentalSystem.Api/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - env/CarRentalApiEnv/sqlConnection.env
      - env/CarRentalApiEnv/jwtAuthentication.env
      - env/CarRentalApiEnv/brevoSettings.env
      - env/CarRentalApiEnv/elasticSearch.env
      - env/CarRentalApiEnv/client.env
    depends_on:
      - sqlserver
      - elasticsearch

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    env_file:
      - env/sqlServer.env
    ports:
      - "1433:1433"
    healthcheck:
      test: [ "CMD-SHELL", "pgrep -x 'sqlservr' || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s

    volumes:
      - sqlserverdata:/var/opt/mssql
        
  tests:
    build:
      context: .
      dockerfile: CarRentalSystem.Test/Dockerfile
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=TestCarRentalSystem;User ID=sa;Password=Ruba*12345;TrustServerCertificate=true;


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    env_file:
      - env/elasticSearch.env
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
  
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    ports:
      - "5601:5601"
    environment:
      - xpack.security.enabled=false
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch


volumes:
  sqlserverdata:
  elasticsearchdata:
